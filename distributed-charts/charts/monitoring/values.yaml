prometheus:
  enabled: true
  server:
    persistentVolume:
      enabled: true
      size: 10Gi
    service:
      type: NodePort
      nodePort: 30090
    extraScrapeConfigs: |
      - job_name: 'sockshop'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: "true"
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: "(.+)"
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: "(.+):(?:\\d+);(\\d+)"
            replacement: "$1:$2"
            target_label: __address__

grafana:
  enabled: true
  adminUser: admin
  #mdp généré dynamiquement si non spécifié
  adminPassword: ""
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://prometheus-stack-kube-prom-prometheus.monitoring.svc.cluster.local:9090
          isDefault: true
  persistence:
    enabled: true
    size: 5Gi
  service:
    type: NodePort
    nodePort: 30300
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          updateIntervalSeconds: 300
          options:
            path: /var/lib/grafana/dashboards
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"
    searchNamespace: monitoring
    watch: true
    logLevel: INFO

# Activation des dashboards par défaut de kube-prometheus-stack
kube-prometheus-stack:
  grafana:
    defaultDashboardsEnabled: true
    defaultDashboardsTimezone: "utc"

  # Configuration d'Alertmanager pour les notifications
  alertmanager:
    enabled: true
    config:
      global:
        slack_api_url: "https://hooks.slack.com/services/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"
      route:
        receiver: "slack"
        group_by: ["alertname", "namespace", "severity"]
        routes:
          - match:
              severity: critical
            receiver: "slack-critical"
      receivers:
        - name: "slack"
          slack_configs:
            - channel: "#monitoring-alerts"
              send_resolved: true
              title: "{{ .CommonAnnotations.summary }}"
              text: "{{ .CommonAnnotations.description }}"
        - name: "slack-critical"
          slack_configs:
            - channel: "#monitoring-critical"
              send_resolved: true
              title: "[CRITICAL] {{ .CommonAnnotations.summary }}"
              text: "{{ .CommonAnnotations.description }}"
